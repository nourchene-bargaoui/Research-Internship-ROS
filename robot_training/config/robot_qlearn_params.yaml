m2wr: #namespace
    #task_and_robot_environment_name: 'M2wrEnv-v0'
    #ros_ws_abspath: "/home/catkinwsros"
    running_step: 0.04 # amount of time the control will be executed
    pos_step: 0.06   # increment in position for each command
    
    #qlearn parameters
    alpha: 1.0
    gamma: 0.7
    epsilon: 0.9
    epsilon_discount: 0.999
    nepisodes: 10000
    nsteps: 10000
    number_splits: 10 #set to change the number of state splits for the continuous problem and also the number of env_variable splits

    running_step: 0.02 # Time for each step
    wait_time: 0.1 # Time to wait in the reset phases

    n_actions: 3 # We have 3 actions, Forwards,TurnLeft,TurnRight
    n_observations: 6 # We have 6 different observations

    speed_step: 1 # Time to wait in the reset phases

    linear_forward_speed: 0.2 # Spawned for ging fowards
    linear_turn_speed: 0.1 # Lienare speed when turning
    angular_speed: 0.07 # Angular speed when turning Left or Right
    init_linear_forward_speed: 0.0 # Initial linear speed in which we start each episode
    init_linear_turn_speed: 0.0 # Initial angular speed in shich we start each episode
    
    desired_pose_x: 2.216
    desired_pose_y: 9.399
    desired_pose_z: 0
   

    max_x_left: 1000 
    min_x_right: 100 
    middle_x: 399
    
   # number_of_sectors: 3 # How many sectors we have
   # min_range: 0.5 # Minimum meters below wich we consider we have crashed
   # middle_range: 1.0 # Minimum meters below wich we consider we have crashed
   # danger_laser_value: 2 # Value considered Ok, no wall
   # middle_laser_value: 1 # Middle value
   # safe_laser_value: 0 # Value considered there is an obstacle or crashed
    
    forwards_reward: 5 # Points Given to go forwards
    turn_reward: 1 # Points Given to turn as action
    end_episode_points: 200 # Points given when ending an episode
    

